version: '3'
services:
  back-end:
    container_name: back-end
    depends_on:
      - db
    restart: always
    build: ./back-end
    volumes:
      - './back-end:/back-end/'
      - /back-end/node_modules
    environment:
      # These are stored in the .env file
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_PORT: '${MYSQL_PORT}'
      PROD_URL: '${PROD_URL}'
      PROD_PORT: '${PROD_PORT}'
      DEV_URL_FRONTEND: '${DEV_URL_FRONTEND}'
      DEV_URL_BACKEND:  '${DEV_URL_BACKEND}'
      DEV_FRONTEND_PORT: '${DEV_FRONTEND_PORT}'
      DEV_BACKEND_PORT: '${DEV_BACKEND_PORT}'
      JWTSECRET: '${JWTSECRET}'
      APISUFFIX: '${APISUFFIX}'
      NODE_ENV: development
    ports:
      - '9000:9000'
    networks:
      - c4
  front-end:
    container_name: front-end
    restart: always
    build: ./front-end # Location of our Dockerfile
    volumes: # Volume binding
      - './front-end:/front-end/'
      - /front-end/node_modules
    ports:
      - '9001:9001'
    networks:
      - c4
    environment:
      NODE_ENV: development
  db:
    image: mariadb:10.4
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d/
    restart: always
    environment:
      # These are stored in the .env file
      DB_HOST: db
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_PORT: '${MYSQL_PORT}'
    ports:
      - '3308:${MYSQL_PORT}'
    networks:
      - c4
    command: mysqld --innodb-buffer-pool-size=256M
networks:
  c4:
    driver: bridge
volumes:
  db_data: {}
