version: '3'
services:
  test-frontend:
    container_name: test-frontend
    build:
      context: ./front-end
      dockerfile: Dockerfile.test.yml
    ports:
      - '9001:9001'
    networks:
      - test-frontend-c4
    environment:
      PROD_URL: '${PROD_URL}'
      PROD_PORT: '${PROD_PORT}'
      DEV_URL: '${DEV_URL_FRONTEND}'
      DEV_FRONTEND_PORT: '${DEV_FRONTEND_PORT}'
      DEV_BACKEND_PORT: '${DEV_BACKEND_PORT}'
      APISUFFIX: '${APISUFFIX}'
      NODE_ENV: development
  test-backend:
    container_name: test-backend
    build:
      context: ./back-end
      dockerfile: Dockerfile
    ports:
      - '9000:9000'
    environment:
      # These are stored in the .env file
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_PORT: "${MYSQL_PORT}"
      PROD_URL: '${PROD_URL}'
      PROD_PORT: '${PROD_PORT}'
      DEV_URL: '${DEV_URL_FRONTEND}'
      DEV_FRONTEND_PORT: '${DEV_FRONTEND_PORT}'
      DEV_BACKEND_PORT: '${DEV_BACKEND_PORT}'
      TESTING: 1
      WAIT_HOSTS: db_test:${MYSQL_PORT}
      APISUFFIX: '${APISUFFIX}'
    networks:
      - test-frontend-c4
  db_test:
    container_name: db_test
    image: mariadb:10.4.7
    logging:
      driver: none
    volumes:
      - db_data_test:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d/
    environment:
      # These are stored in the .env file
      DB_HOST: db_test
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_PORT: "${MYSQL_PORT}"
      MYSQL_INITDB_SKIP_TZINFO: 1
    networks:
      - test-frontend-c4
volumes:
  db_data_test: {}
networks:
  test-frontend-c4:
